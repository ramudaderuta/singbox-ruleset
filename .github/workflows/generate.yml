name: generate

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_run:
    workflows: ["fetch-remote-json"]
    types: [completed]

jobs:
  generatesrs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (use the triggering commit when available)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
          fetch-depth: 0
          persist-credentials: true

      - name: setup singbox
        env:
          SINGBOX_DEB_URL: "https://github.com/SagerNet/sing-box/releases/download/v1.12.5/sing-box_1.12.5_linux_amd64.deb"
        run: |
          wget -O sing-box.deb $SINGBOX_DEB_URL
          sudo dpkg -i sing-box.deb

      - name: install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: generate singbox config (root json files)
        run: |
          if [ ! -d "srs" ]; then
            mkdir srs
          else
            echo 已存在 srs 目录
          fi
          shopt -s nullglob
          for file in *.json; do
            filename=$(basename "$file" .json)
            sing-box rule-set compile "$file" -o "srs/$filename.srs"
          done

      - name: generate singbox & dat files for remote
        run: |
          # create remote output dirs
          if [ ! -d "remote" ]; then
            echo "remote 目录不存在，跳过 remote 处理"
          fi
          mkdir -p remote/srs remote/dat

          shopt -s nullglob
          for file in remote/*.json *.json; do
            [ -f "$file" ] || continue
            filename=$(basename "$file" .json)

            # 生成 srs 放到 remote/srs
            sing-box rule-set compile "$file" -o "remote/srs/$filename.srs" || echo "sing-box compile failed for $file"

            # jq 提取并规范化前导点：去掉前缀后的 leading dots
            jq -r '
              .rules[]? |
              ( .domain[]? | "full:" + . ),
              ( .domain_suffix[]? | "domain:" + . ),
              ( .domain_keyword[]? | "keyword:" + . ),
              ( .domain_regex[]? | "regexp:" + . ),
              ( .ip_cidr[]? )
            ' "$file" \
            | sed -E 's/^([^:]+):\.+(.*)/\1:\2/' \
            | sed "/^$/d" \
            | sort -u > "remote/dat/$filename.dat" || true

            # 同时保留到根 dat/ 目录
            mkdir -p dat
            cp -f "remote/dat/$filename.dat" "dat/$filename.dat" || true

            echo "生成 remote/srs/$filename.srs 和 remote/dat/$filename.dat"
          done

      - name: Commit and push generated files (including remote)
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

          # stage the generated outputs (root srs/dat and remote ones)
          git add srs dat remote/srs remote/dat || true

          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "Generate srs and dat files (including remote outputs)"
            git push
          fi
