name: generate

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_run:
    workflows: ["fetch-remote-json"]
    types: [completed]

jobs:
  generatesrs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup singbox
        env:
          SINGBOX_DEB_URL: "https://github.com/SagerNet/sing-box/releases/download/v1.12.5/sing-box_1.12.5_linux_amd64.deb"
        run: |
          wget -O sing-box.deb $SINGBOX_DEB_URL
          sudo dpkg -i sing-box.deb

      - name: install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: generate singbox config (recursively)
        run: |
          mkdir -p srs
          shopt -s nullglob
          # 查找仓库中所有 json（排除 .git、srs、dat 目录），保留相对路径，并在 srs/ 下复刻目录结构
          find . -type f -name '*.json' ! -path "./.git/*" ! -path "./srs/*" ! -path "./dat/*" -print0 \
          | while IFS= read -r -d '' file; do
            rel="${file#./}"
            outdir="$(dirname "srs/$rel")"
            mkdir -p "$outdir"
            filename="$(basename "$rel" .json)"
            echo "Compiling $rel -> $outdir/$filename.srs"
            # 尝试编译；失败也继续（你可以根据需要改为 exit 1）
            if ! sing-box rule-set compile "$file" -o "$outdir/$filename.srs"; then
              echo "WARN: sing-box compile failed for $file"
            fi
          done

      - name: generate dat files (recursively)
        run: |
          mkdir -p dat
          shopt -s nullglob
          # 同样递归遍历所有 json，并在 dat/ 下复刻目录结构
          find . -type f -name '*.json' ! -path "./.git/*" ! -path "./srs/*" ! -path "./dat/*" -print0 \
          | while IFS= read -r -d '' file; do
            rel="${file#./}"
            outdir="$(dirname "dat/$rel")"
            mkdir -p "$outdir"
            outfile="dat/${rel%.json}.dat"
            echo "Generating $outfile from $rel"
            jq -r '
              .rules[]? |
              ( .domain[]? | "full:" + . ),
              ( .domain_suffix[]? | "domain:" + . ),
              ( .domain_keyword[]? | "keyword:" + . ),
              ( .domain_regex[]? | "regexp:" + . ),
              ( .ip_cidr[]? )
            ' "$file" \
            | sed -E 's/^([^:]+):\.+(.*)/\1:\2/' \
            | sed "/^$/d" \
            | sort -u > "$outfile" || true
          done

      - name: Commit and push *.srs and *.dat
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add srs dat || true
          # 如果没有 staged 变更就退出
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "Generate srs and dat files"
            echo "commit message: Generate srs and dat files"
            git push
          fi
